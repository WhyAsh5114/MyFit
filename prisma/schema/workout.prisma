model WorkoutOfMesocycle {
  id            String         @id @default(cuid()) /// @zod.string.cuid2()
  workoutId     String         @unique
  mesocycleId   String
  splitDayIndex Int
  workoutStatus WorkoutStatus?
  workout       Workout        @relation(fields: [workoutId], references: [id], onDelete: Cascade)
  mesocycle     Mesocycle      @relation(fields: [mesocycleId], references: [id], onDelete: Cascade)
}

model Workout {
  id                 String              @id @default(cuid()) /// @zod.string.cuid2()
  user               User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  workoutOfMesocycle WorkoutOfMesocycle?
  userBodyweight     Float
  startedAt          DateTime
  endedAt            DateTime
  workoutExercises   WorkoutExercise[]
  userId             String
  note               String?
}

model WorkoutExercise {
  id                  String               @id @default(cuid()) /// @zod.string.cuid2()
  exerciseIndex       Int
  name                String
  workout             Workout              @relation(fields: [workoutId], references: [id], onDelete: Cascade)
  workoutId           String
  targetMuscleGroup   MuscleGroup
  customMuscleGroup   String?
  bodyweightFraction  Float?
  sets                WorkoutExerciseSet[]
  setType             SetType
  changeType          ChangeType?
  changeAmount        Float?
  repRangeStart       Int
  repRangeEnd         Int
  note                String?
  overloadPercentage  Float?
  lastSetToFailure    Boolean?
  forceRIRMatching    Boolean?
  minimumWeightChange Float?
}

model WorkoutExerciseSet {
  id                String                   @id @default(cuid()) /// @zod.string.cuid2()
  setIndex          Int
  workoutExercise   WorkoutExercise          @relation(fields: [workoutExerciseId], references: [id], onDelete: Cascade)
  workoutExerciseId String
  reps              Int
  load              Float
  RIR               Int
  skipped           Boolean
  miniSets          WorkoutExerciseMiniSet[]
}

model WorkoutExerciseMiniSet {
  id                   String             @id @default(cuid()) /// @zod.string.cuid2()
  miniSetIndex         Int
  reps                 Int
  load                 Float
  RIR                  Int
  parentSet            WorkoutExerciseSet @relation(fields: [workoutExerciseSetId], references: [id], onDelete: Cascade)
  workoutExerciseSetId String
}
